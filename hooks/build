#!/bin/bash

# Custom build for Docker Hub
# see: https://medium.com/microscaling-systems/labelling-automated-builds-on-docker-hub-f3d073fb8e1

set -e

ICINGA2_TYPE=${1}

# FROM ubuntu:19.04
# FROM debian:9-slim

BUILD_BASE=${BUILD_BASE:-'ubuntu:19.04'}

echo ""
echo " BUILD_DATE          : ${BUILD_DATE}"
echo " BUILD_BASE          : ${BUILD_BASE}"
echo " ICINGA2_VERSION     : ${ICINGA2_VERSION}"
[ -n "${ICINGA2_TYPE}" ]         && echo " ICINGA2_TYPE        : ${ICINGA2_TYPE}"
[ "${ICINGA2_TYPE}" = "master" ] && echo " CERT_SERVICE_VERSION: ${CERT_SERVICE_VERSION}"
echo " GIT_SHA1            : ${GIT_SHA1}"
echo ""

echo "build debian based"

if [ -z "${ICINGA2_TYPE}" ]
then
  docker build \
    --file Dockerfile.base \
    --build-arg VCS_REF="${GIT_SHA1}" \
    --build-arg BUILD_BASE="${BUILD_BASE}" \
    --build-arg BUILD_DATE="${BUILD_DATE}" \
    --build-arg BUILD_VERSION="${BUILD_VERSION}" \
    --build-arg ICINGA2_VERSION="${ICINGA2_VERSION}" \
    --build-arg CERT_SERVICE_TYPE= \
    --build-arg CERT_SERVICE_VERSION= \
    --tag "${DOCKER_NAME_SPACE}/${DOCKER_IMAGE_NAME}:${DOCKER_VERSION}-base" .

  echo ""
  docker images "${DOCKER_NAME_SPACE}/${DOCKER_IMAGE_NAME}:${DOCKER_VERSION}-base" | tail -n1

  echo ""
  echo "---------------------------------------------------------------------"
else

  echo ""
  echo "   icinga2-${ICINGA2_TYPE} (use build base: ${BUILD_IMAGE})"
  echo ""

  if [ "${ICINGA2_TYPE}" = "master" ]
  then
    pushd build > /dev/null

    if [[ "${CERT_SERVICE_TYPE}" = "local" ]]
    then
      echo "use local sources"

    else
      if [[ ! -d ruby-icinga-cert-service ]]
      then
        git clone https://github.com/bodsch/ruby-icinga-cert-service.git
      else
        pushd ruby-icinga-cert-service > /dev/null
        git fetch --all --prune -a
        popd > /dev/null
      fi

      cd ruby-icinga-cert-service

      if [[ "${CERT_SERVICE_TYPE}" = "stable" ]]
      then
        echo "switch to stable Tag v${CERT_SERVICE_VERSION}"
        git checkout "tags/${CERT_SERVICE_VERSION}" 2> /dev/null
      elif [[ "${CERT_SERVICE_TYPE}" = "development" ]]
      then
        echo "switch to development Branch"
        git checkout development 2> /dev/null
      fi
    fi

    popd > /dev/null

    docker build \
      --file "Dockerfile.${ICINGA2_TYPE}" \
      --compress \
      --cache-from "${DOCKER_NAME_SPACE}/${DOCKER_IMAGE_NAME}:${DOCKER_VERSION}-base" \
      --build-arg BUILD_IMAGE="${BUILD_IMAGE}" \
      --build-arg VCS_REF="${GIT_SHA1}" \
      --build-arg BUILD_DATE="${BUILD_DATE}" \
      --build-arg BUILD_VERSION="${BUILD_VERSION}" \
      --build-arg ICINGA2_VERSION="${ICINGA2_VERSION}" \
      --build-arg CERT_SERVICE_TYPE="${CERT_SERVICE_TYPE}" \
      --build-arg CERT_SERVICE_VERSION="${CERT_SERVICE_VERSION}" \
      --tag "${DOCKER_NAME_SPACE}/${DOCKER_IMAGE_NAME}:${DOCKER_VERSION}-${ICINGA2_TYPE}" .
  else

    docker build \
      --file "Dockerfile.${ICINGA2_TYPE}" \
      --compress \
      --cache-from "${DOCKER_NAME_SPACE}/${DOCKER_IMAGE_NAME}:${DOCKER_VERSION}-base" \
      --build-arg BUILD_IMAGE="${BUILD_IMAGE}" \
      --build-arg VCS_REF="${GIT_SHA1}" \
      --build-arg BUILD_DATE="${BUILD_DATE}" \
      --build-arg BUILD_VERSION="${BUILD_VERSION}" \
      --build-arg ICINGA2_VERSION="${ICINGA2_VERSION}" \
      --tag "${DOCKER_NAME_SPACE}/${DOCKER_IMAGE_NAME}:${DOCKER_VERSION}-${ICINGA2_TYPE}" .
  fi

  echo ""
  docker images "${DOCKER_NAME_SPACE}/${DOCKER_IMAGE_NAME}:${DOCKER_VERSION}-${ICINGA2_TYPE}" | tail -n1
  echo ""
  echo "---------------------------------------------------------------------"
fi

echo ""
