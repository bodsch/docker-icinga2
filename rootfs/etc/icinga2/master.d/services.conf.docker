/*
 * Service apply rules.
 *
 * especially for a docker environment
 *
 *
 * Tip: Use `icinga2 object list --type Service` to
 * list all service objects after running
 * configuration validation (`icinga2 daemon -C`).
 */

/*
 * These are generic `ping4` and `ping6`
 * checks applied to all hosts having the
 * `address` resp. `address6` attribute
 * defined.
 */
apply Service "ping4" {
  import "generic-service"
  check_command = "ping4"

  assign where host.address
  ignore where host.vars.alive_dummy
}

/*
apply Service for (disk => config in host.vars.disks) {
  import "generic-service"

  check_command = "disk"

  vars += config
  assign where host.name == NodeName
}
*/

apply Service "icinga" {
  import "generic-service"

  check_command = "icinga"
  assign where host.name == NodeName
}

/*
apply Service "load" {
  import "generic-service"

  check_command = "load"
  assign where host.name == NodeName
}
*/


/*
 * Apply the `ssh` service to all hosts
 * with the `address` attribute defined and
 * the custom attribute `os` set to `Linux`.
 */
/*
apply Service "ssh" {
  import "generic-service"

  check_command = "ssh"
  assign where (host.address || host.address6) && host.vars.os == "Linux"
}

apply Service for (http_vhost => config in host.vars.http_vhosts) {
  import "generic-service"

  check_command = "http"

  vars += config
}

apply Service "procs" {
  import "generic-service"

  check_command = "procs"
  assign where host.name == NodeName && host.vars.os == "Linux"
}

apply Service "swap" {
  import "generic-service"

  check_command = "swap"
  assign where host.name == NodeName && host.vars.os == "Linux"
}

apply Service "users" {
  import "generic-service"

  check_command = "users"
  assign where host.name == NodeName && host.vars.os == "Linux"
}
*/
