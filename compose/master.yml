---
version: '3.3'

services:
  # the Icinga2 Master
  # includes a certificate service to create and provide a icinga certificate
  icinga2-master:
    #image: ${DOCKER_NAME_SPACE}/docker-icinga2:${DOCKER_VERSION}-master
    build:
      context: ..
      dockerfile: Dockerfile.master
      args:
        - BUILD_IMAGE=${BUILD_IMAGE}
        - BUILD_DATE=${BUILD_DATE}
        - BUILD_VERSION=${BUILD_VERSION}
        - ICINGA2_VERSION=${ICINGA2_VERSION}
        - CERT_SERVICE_TYPE=${CERT_SERVICE_TYPE}
        - CERT_SERVICE_VERSION=${CERT_SERVICE_VERSION}
    container_name: icinga2-master
    hostname: icinga2-master.matrix.lan
    restart: always
    privileged: true
    ports:
      - 5665:5665
      - 8080
    environment:
      - ICINGA2_API_USERS=root:icinga,dashing:dashing,cert:foo-bar
      - DEBUG=0
      - LOG_LEVEL
      - MYSQL_HOST=database
      - MYSQL_ROOT_USER=${MARIADB_SYSTEM_USER}
      - MYSQL_ROOT_PASS=${MARIADB_ROOT_PASSWORD}
      - IDO_PASSWORD
      # environment variables for the certificates service
      - ICINGA2_MASTER
      - BASIC_AUTH_USER
      - BASIC_AUTH_PASS
      # rest api
      - CERT_SERVICE_BA_USER
      - CERT_SERVICE_BA_PASSWORD
      - CERT_SERVICE_API_USER
      - CERT_SERVICE_API_PASSWORD
      - CERT_SERVICE_SERVER
      - CERT_SERVICE_PORT
      - CERT_SERVICE_PATH
      # graphite
      - CARBON_HOST
      - CARBON_PORT
      # influxdb
      - INFLUXDB_HOST
      - INFLUXDB_USER
      - INFLUXDB_PASS
      - INFLUXDB_DB
      #
      - DEMO_DATA
      - TICKET_SALT
    volumes:
      - /etc/localtime:/etc/localtime:ro
    links:
      - database
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
#    cap_drop:
#      - NET_ADMIN
#      - SYS_ADMIN
    networks:
      - database
      - backend
#    volumes:
#      - icinga:/var/lib/icinga2
